{
  "name": "postman-collection-explorer",
  "displayName": "Postman Collection Explorer",
  "description": "An extension for VS Code to explore, manage and test Postman Collections.",
  "version": "0.4.0",
  "author": "MrCodingB",
  "license": "SEE LICENSE IN LICENSE",
  "preview": true,
  "publisher": "MrCodingB",
  "bugs": "https://github.com/MrCodingB/Postman-Collection-Explorer-VS-Code/issues",
  "repository": {
    "type": "git",
    "url": "https://github.com/MrCodingB/Postman-Collection-Explorer-VS-Code.git"
  },
  "icon": "assets/extension-icon.png",
  "engines": {
    "vscode": "^1.89.0",
    "node": "^20"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "Postman",
    "API",
    "Web"
  ],
  "main": "./dist/extension.js",
  "scripts": {
    "vscode:prepublish": "npm run cleanbuild && npm run pack",
    "pack": "webpack --mode production",
    "pack:dev": "webpack --mode development",
    "deploy": "vsce publish",
    "vsce": "vsce",
    "cleanbuild": "node ./scripts/clean-build.js",
    "build": "npm run lint && npm run pack:dev",
    "compile": "tsc -p ./",
    "lint": "eslint -c eslint.config.mjs src",
    "pretest": "npm run compile && npm run lint",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@eslint/js": "^9.3.0",
    "@types/chai": "^4.3.16",
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.6",
    "@types/newman": "^5.3.6",
    "@types/node": "^20.12.12",
    "@types/postman-collection": "^3.5.10",
    "@types/vscode": "^1.89.0",
    "@vscode/test-electron": "^2.3.10",
    "@vscode/vsce": "^2.26.1",
    "chai": "^5.1.1",
    "glob": "^10.4.1",
    "mocha": "^10.4.0",
    "ts-loader": "^9.5.1",
    "typescript": "^5.4.5",
    "typescript-eslint": "^7.10.0",
    "webpack": "^5.91.0",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "newman": "^6.1.2",
    "postman-collection": "^4.4.0",
    "terser": "^5.31.0"
  },
  "contributes": {
    "commands": [
      {
        "command": "postman-collection-explorer.refreshCollectionView",
        "title": "Refresh Collection Explorer",
        "category": "Postman",
        "icon": "$(refresh)"
      },
      {
        "command": "postman-collection-explorer.refreshTestView",
        "title": "Refresh Tests",
        "category": "Postman",
        "icon": "$(refresh)"
      },
      {
        "command": "postman-collection-explorer.createCollection",
        "title": "Create Collection",
        "category": "Postman",
        "icon": "$(add)"
      },
      {
        "command": "postman-collection-explorer.createFolder",
        "title": "Create Folder",
        "icon": "$(new-folder)"
      },
      {
        "command": "postman-collection-explorer.createRequest",
        "title": "Create Request",
        "icon": "$(new-file)"
      },
      {
        "command": "postman-collection-explorer.remove",
        "title": "Delete",
        "icon": "$(trash)"
      },
      {
        "command": "postman-collection-explorer.rename",
        "title": "Rename"
      },
      {
        "command": "postman-collection-explorer.editAuth",
        "title": "Authorization"
      },
      {
        "command": "postman-collection-explorer.editBody",
        "title": "Body"
      },
      {
        "command": "postman-collection-explorer.editSettings",
        "title": "Settings"
      },
      {
        "command": "postman-collection-explorer.editDescription",
        "title": "Description"
      },
      {
        "command": "postman-collection-explorer.editMethod",
        "title": "Method"
      },
      {
        "command": "postman-collection-explorer.editUrl",
        "title": "URL"
      },
      {
        "command": "postman-collection-explorer.editParameters",
        "title": "Query Parameters"
      },
      {
        "command": "postman-collection-explorer.editHeaders",
        "title": "Headers"
      },
      {
        "command": "postman-collection-explorer.editPrerequestScript",
        "title": "Pre-request Script"
      },
      {
        "command": "postman-collection-explorer.editTestScript",
        "title": "Test Script"
      },
      {
        "command": "postman-collection-explorer.editVariables",
        "title": "Variables"
      },
      {
        "command": "postman-collection-explorer.sendRequest",
        "title": "Send Request",
        "icon": "$(export)"
      },
      {
        "command": "postman-collection-explorer.viewApiDescription",
        "title": "View API Description",
        "category": "Postman"
      },
      {
        "command": "postman-collection-explorer.runTests",
        "title": "Run Tests",
        "category": "Postman",
        "icon": "$(run)"
      }
    ],
    "views": {
      "postman-collection-explorer": [
        {
          "id": "postmanCollectionExplorer",
          "name": "Postman Collection Explorer"
        }
      ],
      "test": [
        {
          "id": "postmanTestExplorer",
          "name": "Postman Tests Explorer"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "postman-collection-explorer",
          "title": "Postman Collection Explorer",
          "icon": "assets/postman-head.svg"
        }
      ]
    },
    "menus": {
      "commandPalette": [
        {
          "command": "postman-collection-explorer.createFolder",
          "when": "false"
        },
        {
          "command": "postman-collection-explorer.createRequest",
          "when": "false"
        },
        {
          "command": "postman-collection-explorer.remove",
          "when": "false"
        },
        {
          "command": "postman-collection-explorer.rename",
          "when": "false"
        },
        {
          "command": "postman-collection-explorer.editAuth",
          "when": "false"
        },
        {
          "command": "postman-collection-explorer.editBody",
          "when": "false"
        },
        {
          "command": "postman-collection-explorer.editSettings",
          "when": "false"
        },
        {
          "command": "postman-collection-explorer.editDescription",
          "when": "false"
        },
        {
          "command": "postman-collection-explorer.editMethod",
          "when": "false"
        },
        {
          "command": "postman-collection-explorer.editUrl",
          "when": "false"
        },
        {
          "command": "postman-collection-explorer.editParameters",
          "when": "false"
        },
        {
          "command": "postman-collection-explorer.editHeaders",
          "when": "false"
        },
        {
          "command": "postman-collection-explorer.editPrerequestScript",
          "when": "false"
        },
        {
          "command": "postman-collection-explorer.editTestScript",
          "when": "false"
        },
        {
          "command": "postman-collection-explorer.editVariables",
          "when": "false"
        },
        {
          "command": "postman-collection-explorer.sendRequest",
          "when": "false"
        }
      ],
      "view/item/context": [
        {
          "command": "postman-collection-explorer.createRequest",
          "when": "viewItem == folder || viewItem == collection && view == postmanCollectionExplorer",
          "group": "inline@1"
        },
        {
          "command": "postman-collection-explorer.createFolder",
          "when": "viewItem == folder || viewItem == collection && view == postmanCollectionExplorer",
          "group": "inline@2"
        },
        {
          "command": "postman-collection-explorer.remove",
          "when": "view == postmanCollectionExplorer",
          "group": "inline@3"
        },
        {
          "command": "postman-collection-explorer.sendRequest",
          "when": "view == postmanCollectionExplorer && viewItem == request",
          "group": "inline@4"
        },
        {
          "command": "postman-collection-explorer.rename",
          "when": "view == postmanCollectionExplorer",
          "group": "1_edit@1"
        },
        {
          "command": "postman-collection-explorer.editVariables",
          "when": "view == postmanCollectionExplorer && viewItem == collection",
          "group": "1_edit@2"
        },
        {
          "command": "postman-collection-explorer.editDescription",
          "when": "view == postmanCollectionExplorer",
          "group": "1_edit@3"
        },
        {
          "command": "postman-collection-explorer.editAuth",
          "when": "view == postmanCollectionExplorer",
          "group": "1_edit@4"
        },
        {
          "submenu": "requestMenu",
          "when": "view == postmanCollectionExplorer && viewItem == request",
          "group": "1_edit@5"
        },
        {
          "command": "postman-collection-explorer.editPrerequestScript",
          "when": "view == postmanCollectionExplorer",
          "group": "2_scripts@1"
        },
        {
          "command": "postman-collection-explorer.editTestScript",
          "when": "view == postmanCollectionExplorer",
          "group": "2_scripts@2"
        },
        {
          "command": "postman-collection-explorer.createFolder",
          "when": "viewItem == folder || viewItem == collection && view == postmanCollectionExplorer",
          "group": "3_add@1"
        },
        {
          "command": "postman-collection-explorer.createRequest",
          "when": "viewItem == folder || viewItem == collection && view == postmanCollectionExplorer",
          "group": "3_add@2"
        },
        {
          "command": "postman-collection-explorer.viewApiDescription",
          "when": "view == postmanCollectionExplorer",
          "group": "4_view"
        },
        {
          "command": "postman-collection-explorer.remove",
          "when": "view == postmanCollectionExplorer",
          "group": "5_remove"
        }
      ],
      "view/title": [
        {
          "command": "postman-collection-explorer.createCollection",
          "when": "view == postmanCollectionExplorer",
          "group": "navigation@1"
        },
        {
          "command": "postman-collection-explorer.refreshCollectionView",
          "when": "view == postmanCollectionExplorer",
          "group": "navigation@2"
        },
        {
          "command": "postman-collection-explorer.runTests",
          "when": "view == postmanTestExplorer",
          "group": "navigation@1"
        },
        {
          "command": "postman-collection-explorer.refreshTestView",
          "when": "view == postmanTestExplorer",
          "group": "navigation@2"
        }
      ],
      "requestMenu": [
        {
          "command": "postman-collection-explorer.editMethod",
          "group": "1_edit@1"
        },
        {
          "command": "postman-collection-explorer.editUrl",
          "group": "1_edit@2"
        },
        {
          "command": "postman-collection-explorer.editParameters",
          "group": "1_edit@3"
        },
        {
          "command": "postman-collection-explorer.editHeaders",
          "group": "1_edit@4"
        },
        {
          "command": "postman-collection-explorer.editBody",
          "group": "1_edit@5"
        },
        {
          "command": "postman-collection-explorer.editSettings",
          "group": "1_edit@6"
        }
      ]
    },
    "submenus": [
      {
        "id": "requestMenu",
        "label": "Request"
      }
    ],
    "configuration": [
      {
        "title": "Postman Collection Explorer",
        "properties": {
          "postman-collection-explorer.collectionFilePattern": {
            "type": "string",
            "default": "**/*.postman_collection.json",
            "description": "A pattern to use when searching for collection files",
            "pattern": ".+\\.json"
          },
          "postman-collection-explorer.ignorePaths": {
            "type": "string",
            "default": "**/node_modules/**; **/bin/**; **/out/**",
            "description": "A pattern of paths to ignore when searching for collections"
          },
          "postman-collection-explorer.strictSSL": {
            "type": "boolean",
            "default": true,
            "description": "Verify SSL certificates when sending a request. Verification failures will result in the request being aborted."
          },
          "postman-collection-explorer.followRedirects": {
            "type": "boolean",
            "default": true,
            "description": "Follow HTTP 3xx responses as redirects."
          }
        }
      }
    ]
  }
}
